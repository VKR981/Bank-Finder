{"version":3,"sources":["components/pagination.jsx","components/table.jsx","components/tableHeader.jsx","components/selectField.jsx","components/searchField.jsx","App.js","utils.jsx","reportWebVitals.js","index.js"],"names":["Paginationx","data","status","activePage","setActivePage","PAGESIZE","Pagination","disabled","inverted","onPageChange","e","d","ellipsisItem","content","Icon","name","icon","firstItem","lastItem","prevItem","nextItem","totalPages","count","Math","ceil","Tablex","handleFavorites","list","favorites","blurONLoading","filter","Table","celled","selectable","Header","Row","HeaderCell","Body","map","branch","i","Cell","style","ifsc","bank_id","bank_name","maxWidth","address","district","city","state","textAlign","Rating","rating","maxRating","onRate","TableHeader","setShowFavorites","showFavorites","display","flexDirection","alignItems","marginBottom","fontSize","marginRight","fontStyle","fontWeight","Checkbox","slider","value","onChange","checked","SelectField","Select","className","placeholder","options","key","text","SearchField","Input","loading","App","useState","query","setQuery","setCity","setFavorites","url","cache","useRef","initialState","error","useReducer","action","type","payload","dispatch","useEffect","cancelRequest","a","current","fetch","response","json","message","fetchData","useFetch","temp","localStorage","getItem","JSON","parse","target","Message","attached","warning","setItem","stringify","Object","keys","k","results","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1cc8a279.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Pagination, Icon } from \"semantic-ui-react\";\r\n\r\nconst Paginationx = ({ data, status, activePage, setActivePage, PAGESIZE }) => {\r\n  return (\r\n    <Pagination\r\n      disabled={status === \"fetching\"}\r\n      inverted\r\n      onPageChange={(e, d) => setActivePage(d.activePage)}\r\n      activePage={activePage}\r\n      ellipsisItem={{\r\n        content: <Icon name=\"ellipsis horizontal\" />,\r\n        icon: true,\r\n      }}\r\n      firstItem={{ content: <Icon name=\"angle double left\" />, icon: true }}\r\n      lastItem={{ content: <Icon name=\"angle double right\" />, icon: true }}\r\n      prevItem={{ content: <Icon name=\"angle left\" />, icon: true }}\r\n      nextItem={{ content: <Icon name=\"angle right\" />, icon: true }}\r\n      totalPages={data.count ? Math.ceil(data.count / PAGESIZE) : 1}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Paginationx;\r\n","import React from \"react\";\r\nimport { Table, Rating } from \"semantic-ui-react\";\r\n\r\nconst Tablex = ({ handleFavorites, list, status, favorites }) => {\r\n  const blurONLoading = {\r\n    filter: status === \"fetching\" ? \"blur(8px)\" : null,\r\n  };\r\n\r\n  return (\r\n    <Table celled inverted selectable>\r\n      <Table.Header>\r\n        <Table.Row>\r\n          <Table.HeaderCell>IFSC</Table.HeaderCell>\r\n          <Table.HeaderCell>Bank ID</Table.HeaderCell>\r\n          <Table.HeaderCell>Bank</Table.HeaderCell>\r\n          <Table.HeaderCell>Branch</Table.HeaderCell>\r\n          <Table.HeaderCell>Address</Table.HeaderCell>\r\n          <Table.HeaderCell>District</Table.HeaderCell>\r\n          <Table.HeaderCell>City</Table.HeaderCell>\r\n          <Table.HeaderCell>State</Table.HeaderCell>\r\n          <Table.HeaderCell>Favorite</Table.HeaderCell>\r\n        </Table.Row>\r\n      </Table.Header>\r\n\r\n      <Table.Body>\r\n        {list &&\r\n          list.map((branch, i) => (\r\n            <Table.Row key={i}>\r\n              <Table.Cell style={blurONLoading}>{branch.ifsc}</Table.Cell>\r\n              <Table.Cell style={blurONLoading}>{branch.bank_id}</Table.Cell>\r\n              <Table.Cell style={blurONLoading}>{branch.bank_name}</Table.Cell>\r\n              <Table.Cell style={blurONLoading}>\r\n                <div style={{ maxWidth: \"200px\" }}>{branch.branch}</div>\r\n              </Table.Cell>\r\n              <Table.Cell style={blurONLoading}>\r\n                <div style={{ maxWidth: \"300px\" }}>{branch.address}</div>\r\n              </Table.Cell>\r\n              <Table.Cell style={blurONLoading}>{branch.district}</Table.Cell>\r\n              <Table.Cell style={blurONLoading}>{branch.city}</Table.Cell>\r\n              <Table.Cell style={blurONLoading}>{branch.state}</Table.Cell>\r\n              <Table.Cell style={blurONLoading} textAlign=\"center\">\r\n                <Rating\r\n                  icon=\"star\"\r\n                  rating={favorites[branch.ifsc] ? 1 : 0}\r\n                  maxRating={1}\r\n                  onRate={(e, d) =>\r\n                    handleFavorites(branch.ifsc, d.rating, branch)\r\n                  }\r\n                />\r\n              </Table.Cell>\r\n            </Table.Row>\r\n          ))}\r\n      </Table.Body>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default Tablex;\r\n","import React from \"react\";\r\nimport { Checkbox } from \"semantic-ui-react\";\r\n\r\nconst TableHeader = ({ data, setShowFavorites, showFavorites }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        marginBottom: \"30px\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          fontSize: \"16px\",\r\n          marginRight: \"50px\",\r\n          fontStyle: \"italic\",\r\n          fontWeight: \"700\",\r\n        }}\r\n      >\r\n        Results: {data.count}\r\n      </div>\r\n      <div\r\n        style={{\r\n          fontSize: \"16px\",\r\n          marginRight: \"10px\",\r\n          fontStyle: \"italic\",\r\n          fontWeight: \"700\",\r\n        }}\r\n      >\r\n        Favorites\r\n      </div>\r\n      <Checkbox\r\n        slider\r\n        value={showFavorites}\r\n        onChange={(e, d) => {\r\n          setShowFavorites(d.checked);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableHeader;\r\n","import React from \"react\";\r\nimport { Select } from \"semantic-ui-react\";\r\n\r\nexport default function SelectField({ value, onChange }) {\r\n  const countryOptions = [\r\n    { key: \"bg\", value: \"Banglore\", text: \"Banglore\" },\r\n    { key: \"hd\", value: \"Hyderabad\", text: \"Hyderabad\" },\r\n    { key: \"cn\", value: \"Chennai\", text: \"Chennai\" },\r\n    { key: \"kc\", value: \"Kochi\", text: \"Kochi\" },\r\n    { key: \"mb\", value: \"Mumbai\", text: \"Mumbai\" },\r\n    { key: \"bg\", value: \" \", text: \"All\" },\r\n  ];\r\n\r\n  return (\r\n    <Select\r\n      className=\"select\"\r\n      placeholder=\"Select a city\"\r\n      options={countryOptions}\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Input } from \"semantic-ui-react\";\r\n\r\nexport default function SearchField({ value, onChange, status }) {\r\n  return (\r\n    <Input\r\n      value={value}\r\n      onChange={onChange}\r\n      className=\"search\"\r\n      loading={status === \"fetching\"}\r\n      icon=\"search\"\r\n      placeholder=\"Search...\"\r\n    />\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { Input, Select, Icon, Message, Checkbox } from \"semantic-ui-react\";\nimport Paginationx from \"./components/pagination\";\nimport Tablex from \"./components/table\";\nimport { useFetch } from \"./utils\";\nimport TableHeader from \"./components/tableHeader\";\nimport SelectField from \"./components/selectField\";\nimport SearchField from \"./components/searchField\";\nconst PAGESIZE = 10;\n\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [activePage, setActivePage] = useState(1);\n  const [favorites, setFavorites] = useState({});\n  const [showFavorites, setShowFavorites] = useState(false);\n\n  const url =\n    (query || city) &&\n    `http://127.0.0.1:8000/api/branches?q=${city} ${query}&limit=${PAGESIZE}&offset=${\n      (activePage - 1) * PAGESIZE\n    }`;\n\n  const { status, data, error } = useFetch(url);\n\n  // Handles city selection\n  const handleCitySelect = (e, d) => {\n    setCity(d.value);\n    setActivePage(1);\n  };\n\n  // Handles search input\n  const handleSearchInput = (e, d) => {\n    setQuery(e.target.value);\n    setActivePage(1);\n  };\n\n  // Handles add to favorites click\n  const handleFavorites = (ifsc, value, branch) => {\n    if (value) {\n      const temp = { ...favorites };\n      temp[ifsc] = branch;\n      setFavorites(temp);\n      localStorage.setItem(\"favorites\", JSON.stringify(temp));\n    } else {\n      const temp = { ...favorites };\n      delete temp[ifsc];\n      setFavorites(temp);\n      localStorage.setItem(\"favorites\", JSON.stringify(temp));\n    }\n  };\n\n  // Retrive favorites stored in localStorage\n  useEffect(() => {\n    const temp = localStorage.getItem(\"favorites\");\n    if (temp) {\n      setFavorites(JSON.parse(temp));\n    }\n  }, []);\n\n  // flattens and return list of favorites\n  const getFavoritesList = () => {\n    const list = Object.keys(favorites).map((k, i) => {\n      return favorites[k];\n    });\n\n    return list;\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"navbar\">\n        <div className=\"header\">Bank Finder</div>\n      </div>\n\n      <div className=\"inputcontainer\">\n        <SelectField value={city} onChange={handleCitySelect} />\n\n        <SearchField\n          value={query}\n          onChange={handleSearchInput}\n          status={status}\n        />\n\n        {error && (\n          <Message className=\"alertmessage\" attached=\"bottom\" warning>\n            <Icon name=\"exclamation\" />\n            Error occured. Please try again\n          </Message>\n        )}\n      </div>\n\n      <div className=\"tablecontainer\">\n        <TableHeader\n          showFavorites={showFavorites}\n          setShowFavorites={setShowFavorites}\n          data={data}\n        />\n\n        <Paginationx\n          status={status}\n          activePage={activePage}\n          setActivePage={setActivePage}\n          data={data}\n          PAGESIZE={PAGESIZE}\n        />\n        <Tablex\n          handleFavorites={handleFavorites}\n          list={showFavorites ? getFavoritesList() : data.results}\n          status={status}\n          favorites={favorites}\n        />\n      </div>\n\n      <div className=\"footer\"></div>\n    </div>\n  );\n}\n\nexport default App;\n","import { useEffect, useRef, useReducer } from \"react\";\r\n\r\nexport const useFetch = (url) => {\r\n  const cache = useRef({});\r\n\r\n  const initialState = {\r\n    status: \"idle\",\r\n    error: null,\r\n    data: [],\r\n  };\r\n\r\n  const [state, dispatch] = useReducer((state, action) => {\r\n    switch (action.type) {\r\n      case \"FETCHING\":\r\n        return { ...state, status: \"fetching\" };\r\n      case \"FETCHED\":\r\n        return { ...initialState, status: \"fetched\", data: action.payload };\r\n      case \"FETCH_ERROR\":\r\n        return { ...initialState, status: \"error\", error: action.payload };\r\n      default:\r\n        return state;\r\n    }\r\n  }, initialState);\r\n\r\n  useEffect(() => {\r\n    let cancelRequest = false;\r\n    if (!url) return;\r\n\r\n    const fetchData = async () => {\r\n      dispatch({ type: \"FETCHING\" });\r\n      if (cache.current[url]) {\r\n        const data = cache.current[url];\r\n        dispatch({ type: \"FETCHED\", payload: data });\r\n      } else {\r\n        try {\r\n          const response = await fetch(url);\r\n          const data = await response.json();\r\n          cache.current[url] = data;\r\n          if (cancelRequest) return;\r\n          dispatch({ type: \"FETCHED\", payload: data });\r\n        } catch (error) {\r\n          if (cancelRequest) return;\r\n          dispatch({ type: \"FETCH_ERROR\", payload: error.message });\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n\r\n    return function cleanup() {\r\n      cancelRequest = true;\r\n    };\r\n  }, [url]);\r\n\r\n  return state;\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}